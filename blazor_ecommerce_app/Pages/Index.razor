@page "/"
@using Syncfusion.Blazor.Grids;
@using DB.Modules.Auction.Queries;
@using Syncfusion.Blazor.Popups;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager uriHelper;

<blazor_ecommerce_app.Components.BaseAuthroziedComponent>
    <blazor_ecommerce_app.Components.ItemComponent Data="@Data" />
      
</blazor_ecommerce_app.Components.BaseAuthroziedComponent>



@code {
    public string auctionPath = "/auctionview/";


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await FetchData();
        }

    }
    public List<DB.Models.IItem> Data => Model?.Cast<DB.Models.IItem>().ToList();
    public List<DB.Modules.Auction.Queries.GetListOfAuctions.Response> Model { get; set; }

    public async Task FetchData()
    {
        Model = await Mediator.Send(new DB.Modules.Auction.Queries.GetListOfAuctions.Request());
        StateHasChanged();
    }


}